service: fueller-serverless

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  environment:
    DYNAMODB_TABLE: ${self:service}-customer-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  find-customer:
    handler: functions/find-customer.handler
    events:
      - http:
          path: /customer/{id}
          method: get
          cors: true
          request: 
            parameters: 
             paths: 
               id: true

# you can add CloudFormation resource templates here
#resources:
resources:
  Resources:
    GroupsIdTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "CustomerId"
          AttributeType: S
        KeySchema:
        - AttributeName: "CustomerId"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
